name: Update results

on:
  workflow_dispatch:
  schedule:
    - cron: "*/15 09-22 * * *"   # every 15 mins, 09:00â€“22:59 UTC

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest
    # If you stored secrets in an Environment, uncomment the next line and set its name:
    # environment: Production

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Safe debug: confirms secrets are PRESENT without printing values
      - name: Confirm secrets are available (no values printed)
        env:
          RACING_API_BASE: ${{ secrets.RACING_API_BASE }}
          RACING_API_USER: ${{ secrets.RACING_API_USER }}
          RACING_API_PASS: ${{ secrets.RACING_API_PASS }}
        run: |
          python - << 'PY'
          import os
          print("RACING_API_BASE set:", bool(os.getenv("RACING_API_BASE")))
          print("RACING_API_USER set:", bool(os.getenv("RACING_API_USER")))
          print("RACING_API_PASS set:", bool(os.getenv("RACING_API_PASS")))
          PY
      - name: Run fetch_cards.py
        env:
          RACING_API_BASE: ${{ secrets.RACING_API_BASE }}
          RACING_API_USER: ${{ secrets.RACING_API_USER }}
          RACING_API_PASS: ${{ secrets.RACING_API_PASS }}
        run: |
          python fetch_cards.py

      - name: Run fetch_results.py
        env:
          RACING_API_BASE: ${{ secrets.RACING_API_BASE }}
          RACING_API_USER: ${{ secrets.RACING_API_USER }}
          RACING_API_PASS: ${{ secrets.RACING_API_PASS }}
        run: |
          python fetch_results.py

      - name: Commit & push if results.json changed
        run: |
          git config user.name "results-bot"
          git config user.email "results-bot@users.noreply.github.com"
          git add results.json || true
          git diff --quiet && echo "No changes" || (git commit -m "Auto-update results" && git push)
      - name: Commit & push if results.json changed
        run: |
          git config user.name "results-bot"
          git config user.email "results-bot@users.noreply.github.com"
          git add results.json cards.json || true
          git diff --quiet && echo "No changes" || (git commit -m "Auto-update data" && git push)
